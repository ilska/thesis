%% Author: Alfonso Domínguez, Tecnalia% Locally weighted regression: Calculates psis and weights% [PSI,weights] =  dmp_lwr_batch (fTarget, phaseVector,nBases, c, h, goal, y0)function [PSI,weights] =  locallyWeigthedRegression (fTarget, phaseVector,nBases, c, h, goal, y0)PSI=zeros(size(fTarget,2),nBases);weights=zeros(1,nBases);lambda = 1.0;gamma=10^6;p = gamma*ones(1, nBases);E=phaseVector;for ifTarget=1:size(fTarget,2)    psi=zeros(1,nBases);    for k=1:nBases        e = fTarget(ifTarget)-weights(k)*E(ifTarget); %(formula 18)        psi(k) = exp(-((E(ifTarget)-c(k))^2)*h(k)); %(formula 4)        p(k) = (1/lambda)*(p(k)-(((p(k)*E(ifTarget))^2)/((lambda/psi(k))+(p(k)*(E(ifTarget)^2))))); %(formula 17)        weights(k)=weights(k)+psi(k)*p(k)*E(ifTarget)*e; %(formula 16)%         WARNING: formula 16 in (**) is not correct, there is a missing term psi(k).%         In order to check it, look how LWR works in "Constructive Incremental %         Learning from Only Local Information"    end    PSI(ifTarget,:)=psi;end%(**) "Learning Nonlinear Dynamical Systems Models" Auke Jan Ijspeert, % Jun Nakanishi, Heiko Hoffmann, Peter Pastor & Stefan Schaal